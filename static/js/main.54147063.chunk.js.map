{"version":3,"sources":["components/Navbar/Navbar.js","components/ChatTab/ChatTab.js","components/ChatList/ChatList.js","components/TextBox/TextBox.js","components/Message/Message.js","components/ChatStream/ChatStream.js","components/ChatColumn/ChatColumn.js","index.js"],"names":["Navbar","react_default","a","createElement","className","this","props","chatName","React","Component","ChatTab","_this","onClick","name","src","alt","latestMessage","ChatList","map","chat","components_ChatTab_ChatTab","onChatSelect","TextBox","value","message","onChange","placeholder","rows","onSubmit","Message","user","ChatStream","id","messages","components_Message_Message","body","ChatColumn","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","handleSendMessage","newMessage","state","prevState","concat","toConsumableArray","socket","emit","fetch","server","method","headers","Content-Type","JSON","stringify","then","res","json","result","console","log","loader","loading","components_ChatStream_ChatStream","components_TextBox_TextBox","io","_this2","error","on","data","myName","prompt","App","handleChatClick","newChatName","components_Navbar_Navbar","components_ChatList_ChatList","components_ChatColumn_ChatColumn","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"yKAiBeA,gMAXX,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,YACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,cAASE,KAAKC,MAAMC,mBANTC,IAAMC,YCoBZC,gMAnBJ,IAAAC,EAAAN,KACP,OACEJ,EAAAC,EAAAC,cAAA,OACEC,UAAU,WACVQ,QAAS,kBAAMD,EAAKL,MAAMM,QAAQD,EAAKL,MAAMO,QAE7CZ,EAAAC,EAAAC,cAAA,OACEW,IAAI,4EACJC,IAAI,WAENd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,UAAKE,KAAKC,MAAMO,MAChBZ,EAAAC,EAAAC,cAAA,SAAIE,KAAKC,MAAMU,wBAbHR,IAAMC,YC0BbQ,mLAxBF,IAAAN,EAAAN,KAQL,OACIJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aARL,CACV,CACIS,KAAM,WACNG,cAAe,qBAMRE,IAAI,SAAAC,GACP,OACIlB,EAAAC,EAAAC,cAACiB,EAAD,CACIP,KAAMM,EAAKN,KACXG,cAAeG,EAAKH,cACpBJ,QAASD,EAAKL,MAAMe,yBAhBzBb,IAAMC,2BCgBda,gMAfX,OACErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,YACEoB,MAAOlB,KAAKC,MAAMkB,QAClBC,SAAUpB,KAAKC,MAAMmB,SACrBC,YAAY,qBACZC,KAAK,IACLd,KAAK,YAEPZ,EAAAC,EAAAC,cAAA,UAAQS,QAASP,KAAKC,MAAMsB,UAA5B,gBAXcpB,IAAMC,YCiBboB,gMAfX,OACE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OACEW,IAAI,4EACJC,IAAI,WAENd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,UAAKE,KAAKC,MAAMwB,MAChB7B,EAAAC,EAAAC,cAAA,SAAIE,KAAKC,MAAMkB,kBAVHhB,IAAMC,YCebsB,mLAZP,OACI9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsB4B,GAAG,cACnC3B,KAAKC,MAAM2B,SAASf,IAAI,SAAAM,GAAO,OAC5BvB,EAAAC,EAAAC,cAAC+B,EAAD,CAASV,QAASA,EAAQW,KAAML,KAAMN,EAAQX,kBAN7CL,IAAMC,4BC2FhB2B,qBAvFX,SAAAA,EAAY9B,GAAO,IAAAK,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAhC,KAAA+B,IACfzB,EAAA0B,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAApC,KAAMC,KAkCVoC,aAAe,SAAAC,GACXhC,EAAKiC,SAALP,OAAAQ,EAAA,EAAAR,CAAA,GAAiBM,EAAEG,OAAOjC,KAAO8B,EAAEG,OAAOvB,SApC3BZ,EAuCnBoC,kBAAoB,WAChB,IAAIC,EAAa,CACbb,KAAMxB,EAAKsC,MAAMzB,QACjBX,KAAMF,EAAKsC,MAAMpC,MAErBF,EAAKiC,SAAS,SAAAM,GAAS,MAAK,CACxBjB,SAAQ,GAAAkB,OAAAd,OAAAe,EAAA,EAAAf,CAAMa,EAAUjB,UAAhB,CAA0Be,IAClCxB,QAAS,MAEbb,EAAK0C,OAAOC,KAAK,OAAQN,GAEzBO,MAAM5C,EAAK6C,OAAS,QAAS,CACzBC,OAAQ,OACRC,QAAS,CACLC,eAAgB,oBAEpBxB,KAAMyB,KAAKC,UAAUb,KAEpBc,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACFC,QAAQC,IAAIF,MA3DLtD,EA+DnByD,OAAS,WACL,OAAIzD,EAAKsC,MAAMoB,QAEPpE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yBAID,CACHF,EAAAC,EAAAC,cAACmE,EAAD,CAAYrC,SAAUtB,EAAKsC,MAAMhB,WACjChC,EAAAC,EAAAC,cAACoE,EAAD,CACI/C,QAASb,EAAKsC,MAAMzB,QACpBC,SAAUd,EAAK+B,aACfd,SAAUjB,EAAKoC,sBA1E3BpC,EAAKsC,MAAQ,CACTzB,QAAS,GACTS,SAAU,GACVoC,SAAS,GAEb1D,EAAK6C,OAAS,yCACd7C,EAAK0C,OAASmB,IAAG7D,EAAK6C,QARP7C,mFAWC,IAAA8D,EAAApE,KAChBkD,MAAMlD,KAAKmD,QACNM,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACG,SAAAG,GAEIQ,EAAK7B,SAAS,CACVX,SAAUgC,EACVI,SAAS,KAGjB,SAAAK,GACIR,QAAQC,IAAIO,KAGxBrE,KAAKgD,OAAOsB,GAAG,YAAa,SAAAC,GACxBH,EAAK7B,SAAS,SAAAM,GAAS,MAAK,CACxBjB,SAAQ,GAAAkB,OAAAd,OAAAe,EAAA,EAAAf,CAAMa,EAAUjB,UAAhB,CAA0B2C,SAG1C,IAAIC,EAASC,OAAO,qBACpBzE,KAAKuC,SAAS,CAAE/B,KAAMgE,qCAmDtB,OAAO5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,KAAK+D,iBApFvB5D,IAAMC,YCCzBsE,cACJ,SAAAA,EAAYzE,GAAO,IAAAK,EAAA,OAAA0B,OAAAC,EAAA,EAAAD,CAAAhC,KAAA0E,IACjBpE,EAAA0B,OAAAE,EAAA,EAAAF,CAAAhC,KAAAgC,OAAAG,EAAA,EAAAH,CAAA0C,GAAAtC,KAAApC,KAAMC,KAMR0E,gBAAkB,SAAAC,GAChBtE,EAAKiC,SAAS,CACZrC,SAAU0E,KAPZtE,EAAKsC,MAAQ,CACX1C,SAAU,IAHKI,wEAcjB,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAC+E,EAAD,CAAQ3E,SAAUF,KAAK4C,MAAM1C,WAC7BN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACgF,EAAD,CAAU9D,aAAchB,KAAK2E,kBAC7B/E,EAAAC,EAAAC,cAACiF,EAAD,eApBQ5E,IAAMC,WA2BlB4E,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOxF,EAAAC,EAAAC,cAACuF,EAAD,MAASL","file":"static/js/main.54147063.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./styles.css\";\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <header className=\"navbar\">\n        <div className=\"app-name\">Telegram</div>\n        <div className=\"chat-name\">\n          <strong>{this.props.chatName}</strong>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nimport \"./styles.css\";\n\nclass ChatTab extends React.Component {\n  render() {\n    return (\n      <div\n        className=\"chat-tab\"\n        onClick={() => this.props.onClick(this.props.name)}\n      >\n        <img\n          src=\"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\"\n          alt=\"Avatar\"\n        />\n        <div className=\"chat-tab-details\">\n          <h4>{this.props.name}</h4>\n          <p>{this.props.latestMessage}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChatTab;\n","import React from \"react\";\n\nimport \"./styles.css\";\nimport ChatTab from \"../ChatTab/ChatTab\";\n\nclass ChatList extends React.Component {\n    render() {\n        const chats = [\n            {\n                name: \"MDP Chat\",\n                latestMessage: \"End my suffering\"\n            }\n        ];\n\n        return (\n            <div className=\"chat-list\">\n                {chats.map(chat => {\n                    return (\n                        <ChatTab\n                            name={chat.name}\n                            latestMessage={chat.latestMessage}\n                            onClick={this.props.onChatSelect}\n                        />\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default ChatList;\n","import React from \"react\";\n\nimport \"./styles.css\";\n\nclass TextBox extends React.Component {\n  render() {\n    return (\n      <div className=\"text-box\">\n        <textarea\n          value={this.props.message}\n          onChange={this.props.onChange}\n          placeholder=\"Write a message...\"\n          rows=\"3\"\n          name=\"message\"\n        />\n        <button onClick={this.props.onSubmit}>SEND</button>\n      </div>\n    );\n  }\n}\n\nexport default TextBox;\n","import React from \"react\";\n\nimport \"./styles.css\";\n\nclass Message extends React.Component {\n  render() {\n    return (\n      <div className=\"message\">\n        <img\n          src=\"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\"\n          alt=\"Avatar\"\n        />\n        <div className=\"message-content\">\n          <h4>{this.props.user}</h4>\n          <p>{this.props.message}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Message;\n","import React from \"react\";\n\nimport \"./styles.css\";\nimport Message from \"../Message/Message\";\n\nclass ChatStream extends React.Component {\n    render() {\n        return (\n            <div className=\"chat-stream\">\n                <div className=\"chat-stream-content\" id=\"chatStream\">\n                    {this.props.messages.map(message => (\n                        <Message message={message.body} user={message.name} />\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ChatStream;\n","import React from \"react\";\n\nimport \"./styles.css\";\nimport TextBox from \"../TextBox/TextBox\";\nimport ChatStream from \"../ChatStream/ChatStream\";\nimport io from \"socket.io-client\";\nimport { BoxLoading } from \"react-loadingg\";\n\nclass ChatColumn extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            message: \"\",\n            messages: [],\n            loading: true\n        };\n        this.server = \"https://telegram-backend.herokuapp.com\";\n        this.socket = io(this.server);\n    }\n\n    componentDidMount() {\n        fetch(this.server)\n            .then(res => res.json())\n            .then(\n                result => {\n                    // console.log(result.slice(0, 10));\n                    this.setState({\n                        messages: result,\n                        loading: false\n                    });\n                },\n                error => {\n                    console.log(error);\n                }\n            );\n        this.socket.on(\"recieving\", data => {\n            this.setState(prevState => ({\n                messages: [...prevState.messages, data]\n            }));\n        });\n        var myName = prompt(\"What is your name\");\n        this.setState({ name: myName });\n    }\n\n    handleChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    handleSendMessage = () => {\n        var newMessage = {\n            body: this.state.message,\n            name: this.state.name\n        };\n        this.setState(prevState => ({\n            messages: [...prevState.messages, newMessage],\n            message: \"\"\n        }));\n        this.socket.emit(\"send\", newMessage);\n\n        fetch(this.server + \"/send\", {\n            method: \"POST\", // or 'PUT'\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newMessage)\n        })\n            .then(res => res.json())\n            .then(result => {\n                console.log(result);\n            });\n    };\n\n    loader = () => {\n        if (this.state.loading) {\n            return (\n                <div>\n                    <h2>Loading...</h2>\n                </div>\n            );\n        } else {\n            return [\n                <ChatStream messages={this.state.messages} />,\n                <TextBox\n                    message={this.state.message}\n                    onChange={this.handleChange}\n                    onSubmit={this.handleSendMessage}\n                />\n            ];\n        }\n    };\n\n    render() {\n        return <div className=\"chat-area\">{this.loader()}</div>;\n    }\n}\n\nexport default ChatColumn;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\n\nimport Navbar from \"./components/Navbar/Navbar\";\nimport ChatList from \"./components/ChatList/ChatList\";\nimport ChatColumn from \"./components/ChatColumn/ChatColumn\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chatName: \"\"\n    };\n  }\n\n  handleChatClick = newChatName => {\n    this.setState({\n      chatName: newChatName\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Navbar chatName={this.state.chatName} />\n        <div className=\"content\">\n          <ChatList onChatSelect={this.handleChatClick} />\n          <ChatColumn />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}